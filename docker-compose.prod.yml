version: '3.8'

services:
  api:
    build:
      target: production
    volumes:
      - ./.env:/app/.env:ro
    environment:
      - ENVIRONMENT=production
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        max_attempts: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  web:
    build:
      target: production
    environment:
      - NODE_ENV=production
    volumes:
      - ./.env:/app/.env:ro
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        max_attempts: 3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    volumes:
      - redis_data:/data:ro
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        max_attempts: 3
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    depends_on:
      - api
      - web
    deploy:
      replicas: 2
      restart_policy:
        condition: any
        max_attempts: 3
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
