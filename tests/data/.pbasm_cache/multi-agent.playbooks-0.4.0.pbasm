---
author: Playbooks AI
title: Multi-agent program
---

# FirstAgent
This is a test agent

```python
import math

@playbook(triggers=["T1:CND When you need to compute square root"], public=True)
async def A(num: float) -> float:
    return math.sqrt(num)
```

## X($num:int=10) -> str
### Triggers
- T1:BGN When program starts
### Steps
- 01:EXE Get Canada's $secret:str
- 02:QUE Say(user, Tell user about Canada's $secret)
- 03:QUE $population:int = CountryInfoAgent.GetPopulation(country="India")
- 04:YLD for call
- 05:RET f"{$num} {$population}"

```public.json
[
  {
    "name": "A",
    "description": "Compute square root of a number",
    "parameters": {
      "type": "object",
      "properties": {
        "num": {"type": "number", "description": "Number to compute square root of"}
      }
    },
    "triggers": ["T1:CND When you need to compute square root"]
  }
]
```

# CountryInfo
metadata:
---
This agent returns interesting info about a country

```python
from typing import List

@playbook(public=True)
async def GetLengthOfCountry(country: str) -> int:
    return len(country)
```

## LocalPB() -> None
Simple greeting playbook that says hello to the user.
### Steps
- 01:QUE Say(user, Say hello)
- 02:RET

## GetCountryPopulation($country: str) -> float
metadata:
  public: true
---
Calculates population estimate based on country name length.
### Steps
- 01:EXE $population:float = Compute the square root of the length of $country
- 02:RET $population

## GetCountrySecret($country: str) -> str
metadata:
  public: true
---
Returns unusual historical facts about the specified country.
### Triggers
- T1:CND When you need to get a secret about a country
### Steps
- 01:RET an unusual historical fact about $country

## Main() -> None
Main entry point that gets information from FirstAgent and displays it to the user.
### Triggers
- T1:BGN At the beginning
### Steps
- 01:QUE $answer:str = FirstAgent.A(1024)
- 02:YLD for call
- 03:QUE Say(user, Tell user the $answer)
- 04:YLD for exit

```public.json
[
  {
    "name": "GetLengthOfCountry",
    "description": "Returns the length of a country name",
    "parameters": {
      "type": "object",
      "properties": {
        "country": {"type": "string", "description": "Country name"}
      }
    }
  },
  {
    "name": "GetCountryPopulation",
    "description": "Calculates population estimate based on country name length",
    "parameters": {
      "type": "object",
      "properties": {
        "country": {"type": "string", "description": "Country name"}
      }
    }
  },
  {
    "name": "GetCountrySecret",
    "description": "Returns unusual historical facts about the specified country",
    "parameters": {
      "type": "object",
      "properties": {
        "country": {"type": "string", "description": "Country name"}
      }
    },
    "triggers": ["T1:CND When you need to get a secret about a country"]
  }
]
```