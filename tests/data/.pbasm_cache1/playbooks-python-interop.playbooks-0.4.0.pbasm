---
application: MultiAgentChat
author: Playbooks AI
date: '2023-06-15'
tags:
- playbooks
- python
- interop
- example
title: Playbooks Python Interop
version: 0.1.0
---

# Interop
metadata:
  startup_mode: standby
---
This is a simple chat program that demonstrates two-way interop between natural language and python playbooks

```python
import math

@playbook(triggers=["T1:CND When you need to compute square root"])
async def A(num: float) -> float:
  return math.sqrt(num)

@playbook
async def B(num: float) -> float:
  return math.pow(num, 2)

@playbook
async def AB(num: float) -> float:
  return await A(await B(num))

@playbook
async def CallX(num: float) -> float:
  return await X(num)

@playbook
async def BAXY1(num: float) -> float:
  return await B(await A(await X(num))) * await Y(num)
```

## X($num:float) -> float
### Steps
- 01:RET $num * 2

## Y($num:float) -> float
### Steps
- 01:RET half of $num

## XY($num:float) -> float
### Steps
- 01:QUE $temp1:float = Y(num=$num)
- 02:YLD for call
- 03:QUE $result:float = X(num=$temp1)
- 04:YLD for call
- 05:RET $result

## CallA($num:float) -> float
### Steps
- 01:QUE $result:float = A(num=$num)
- 02:YLD for call
- 03:RET $result

## BAXY2($num:float) -> float
### Steps
- 01:QUE $temp1:float = X(num=$num)
- 02:YLD for call
- 03:QUE $temp2:float = A(num=$temp1)
- 04:QUE $temp3:float = Y(num=$num)
- 05:YLD for call
- 06:QUE $temp4:float = B(num=$temp2)
- 07:YLD for call
- 08:EXE $result:float = $temp4 * $temp3
- 09:RET $result

```public.json
[]
```